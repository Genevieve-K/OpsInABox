<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="btnCancel.Text">
    <value>Отменить</value>
  </data>
  <data name="lblDescription.Help">
    <value>Введите краткое описание (по желанию)</value>
  </data>
  <data name="lblDescription.Text">
    <value>Описание</value>
  </data>
  <data name="lblDisplaying.Text">
    <value>Показать содержимое</value>
  </data>
  <data name="lblDisplayingSearch.Text">
    <value>Отображать результаты поиска для</value>
  </data>
  <data name="lblDisplayName.Help">
    <value>Выберите имя для этих документов (не более 100 символов). Оно не обязательно должно быть таким же, как имя файла.</value>
  </data>
  <data name="lblDisplayName.Text">
    <value>Отображаемое имя</value>
  </data>
  <data name="lblExpand.Text">
    <value>(Нажмите, чтобы развернуть/свернуть)</value>
  </data>
  <data name="lblFile.Help">
    <value>Выберите файл, на который Вы хотите сослаться. Ссылка появится как любой другой файл, а также будет включать в себя все версии и комментарии, связанные с файлом. Если файл, который вы ищете еще ​​не существует на сервере, вам необходимо загрузить его с помощью "Загрузить файлы".</value>
  </data>
  <data name="lblFolderName.Help">
    <value>Выберите имя для новой папки (не более 100 символов)</value>
  </data>
  <data name="lblFolderName.Text">
    <value>Имя папки</value>
  </data>
  <data name="lblGoogle.Help">
    <value>Это идентично Внешней Ссылке (URL), за исключением того, что ссылка будет иметь Иконку Google. Когда пользователь нажимает на эту ссылку, документ Google  откроется в новой вкладке.</value>
  </data>
  <data name="lblFileDescription.Help">
    <value>Введите краткое описание этого файла (необязательно)</value>
  </data>
  <data name="lblFileDescription.Text">
    <value>Описание</value>
  </data>
  <data name="lblFileAuthor.Help">
    <value>Введите имя автора/владельца (по желанию)</value>
  </data>
  <data name="lblFileAuthor.Text">
    <value>Автор</value>
  </data>
  <data name="lblFile.Text">
    <value>Файл</value>
  </data>
  <data name="lblGoogle.Text">
    <value>Ссылка на документ Google</value>
  </data>
  <data name="lblIcon.Text">
    <value>Значок</value>
  </data>
  <data name="lblKeywords.Help">
    <value>Введите ключевые слова, связанные с этим файлом. Разделите несколько ключевых слов запятой. Ключевые слова помогут вашим пользователям в поиске документов.</value>
  </data>
  <data name="lblKeywords.Text">
    <value>Ключевые слова</value>
  </data>
  <data name="lblLinkType.Help">
    <value>Выберите тип ссылки.</value>
  </data>
  <data name="lblLinkType.Text">
    <value>Тип ссылки</value>
  </data>
  <data name="lblPage.Help">
    <value>Выберите страницу, на которую вы хотите перейти по ссылке. Когда пользователи нажимают на эту ссылку, она будет открываться в том же окне.</value>
  </data>
  <data name="lblPage.Text">
    <value>Страница</value>
  </data>
  <data name="lblPermissions.Text">
    <value>Разрешения</value>
  </data>
  <data name="lblSelectFile.Help">
    <value>Выберите файл для загрузки в качестве новой версии, затем нажмите кнопку Сохранить версию.</value>
  </data>
  <data name="lblSelectFile.Text">
    <value>Выберите файл</value>
  </data>
  <data name="lblSelectFiles.Text">
    <value>Выберите файлы, которые вы хотите загрузить</value>
  </data>
  <data name="lblSelectFilesHelp.Text">
    <value>Вы можете выбрать любое количество файлов, какое хотите. Когда Вы выбрали ваши файлы, нажмите загрузить. Если Вы хотели бы изменить данные файлов (например, имя или описание) или место их нахождения, щелкните правой кнопкой мыши на файле (после того как вы загрузили его).</value>
  </data>
  <data name="lblSelectIcon.Help">
    <value>Выберите файл изображения (PNG, GIF и, мы предлагаем вам использовать квадратный размером 128px х 128px. PNG файлы, как правило, работают лучше всего, так как они могут обеспечить высокое качество с прозрачным фоном. Избегайте очень высоких разрешений, т.к. они будут замедлять время загрузки). </value>
  </data>
  <data name="lblSelectIcon.Text">
    <value>Выберите файл изображения</value>
  </data>
  <data name="lblTags.Help">
    <value>Выберите теги, которые лучше всего описывают тип ресурса. Документы можно искать. используя теги.</value>
  </data>
  <data name="lblTags.Text">
    <value>Тэги</value>
  </data>
  <data name="lblURL.Help">
    <value>Введите адрес веб-сайта (включая http://). Когда пользователь нажимает на ссылку, сайт откроется в новой вкладке.</value>
  </data>
  <data name="lblURL.Text">
    <value>Адрес сайта</value>
  </data>
  <data name="lblVersion.Help">
    <value>Введите номер версии для этих документов (по желанию)</value>
  </data>
  <data name="lblVersion.Text">
    <value>Версия</value>
  </data>
  <data name="lblVersions.Text">
    <value>Версии</value>
  </data>
  <data name="lblYouTube.Help">
    <value>Введите адрес вашего видео наYouTube, или просто You Tube видео ID. Когда пользователи нажмут на эту ссылку, они просмотрят видео на этом сайте.</value>
  </data>
  <data name="lblYouTube.Text">
    <value>Ссылка на YouTube: </value>
  </data>
  <data name="Save.Text">
    <value>Сохранить</value>
  </data>
</root>